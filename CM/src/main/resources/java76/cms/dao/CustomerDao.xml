<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="java76.cms.dao.CustomerDao">

  <resultMap type="customer" id="customerMap">
    <id column="id" property="id"/>
    <id column="cno" property="no"/>
    <result column="pwd" property="password"/>
  </resultMap>

  <select id="selectList" resultMap="customerMap" parameterType="map">
    select 
      id, pwd, name, age, address, gender, photo, nature, ideal
    from customer
    order by
      <choose>
        <when test="keyword == 'id'">id </when>
        <otherwise>cno </otherwise>
      </choose>
      <choose>
        <when test="align == 'asc'">asc </when>
        <otherwise>desc</otherwise>
      </choose>
    limit #{startIndex}, #{length}
  </select>

  <insert id="insert" parameterType="customer">
    insert into customer(id,pwd,name,age,address,gender,photo,nature,ideal)
    value(#{id},sha1(#{password}),#{name},#{age},#{address},#{gender},#{photo},#{nature},#{ideal})
  </insert>

  <delete id="delete" parameterType="map">
    delete from customer
    where id=#{id} and (pwd is null or pwd=sha1(#{password}))
  </delete>

  <update id="update" parameterType="customer">
    update customer set
      name=#{name},
      pwd=sha1(#{password}),
      age=#{age},
      address=#{address},
      gender=#{gender},
      photo=#{photo}
    where id=#{id} and (pwd is null or pwd=sha1(#{password}))
  </update>
  
  <select id="selectOne" resultMap="customerMap" parameterType="string">
    select 
      id, name, age, address, gender, photo, nature, ideal
    from customer
    where id=#{id}
  </select>
  
  <select id="login" resultMap="customerMap" parameterType="String">
    select 
      id, pwd, name, age, address, gender, photo
    from customer
    where id=#{id} and (pwd is null or pwd=sha1(#{password}))
  </select>
  
  <select id="recent" resultMap="customerMap" parameterType="map">
    select
      cno, name, age, address, gender, photo
    from customer
    order by
    <choose>
      <otherwise>cno </otherwise>
    </choose>
    <choose>
      <otherwise>desc</otherwise>
    </choose>
    limit #{startIndex}, #{length}
  </select>
  
  <select id="search" resultMap="customerMap" parameterType="map">
    select 
      id,
      age,
      address,
      photo
  	from customer 
  	where id like CONCAT('%',#{id},'%') and
  	age like CONCAT(#{age},'%') and
  	address=#{address} and
  	gender=#{gender}  
  </select>
  
  <select id="reco" resultMap="customerMap" parameterType="map">
    select
      id,
       name,
      age,
      address,
      photo
    from customer
    where nature=#{ideal} and address=#{address} and id!=#{id}
  </select>
</mapper>









