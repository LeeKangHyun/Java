<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

  <!-- 1) @Component 애노테이션이 붙은 클래스의 인스턴스를 자동생성하기 => @Autowired가 붙은 필드에 대해 
    객체를 자동 주입한다. -->

  <context:component-scan base-package="java76.pms" />

  <!-- 2) MyBatis의 SqlSessionFactory 객체 준비! 
          => 기존 라이브러리에 있는 SqlSessionFactory는 
             SqlSessionFactoryBuilder를 통해서 생성하였다. 
          => 스프링 IoC 컨테이너에서 자동 생성할 수 없다. =
          > 해결책? 
    - 스프링 IoC 컨테이너에서 SqlSessionFactory 객체를 만들 수 있도록 mybatis 스프링 연동 라이브러리를 사용한다. 
    - 그 라이브러리를 사용하여 SqlSessionFactory를 준비하라! => Spring용 mybatis어뎁터 의존 라이브러리 추가 
    build.gradle에 'org.mybatis:mybatis-spring:1.2.3' 추가 => 사용법 mybatis 사이트 참조 -->
  <bean id="sqlSessionFactory" 
  class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    
  <property name="mapperLocations" 
  value="classpath*:java76/pms/dao/*Dao.xml" />
  
  <property name="typeAliasesPackage" 
  value="java76.pms.domain"/>
</bean>
    

  <!-- DataSource(DB커넥션 풀)는 스프링에서 관리 -->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close">
    <!-- results in a setDriverClassName(String) call -->
    <property name="driverClassName" value="com.mysql.jdbc.Driver" />
    <property name="url" value="jdbc:mysql://localhost:3306/mydb" />
    <property name="username" value="java76" />
    <property name="password" value="1111" />
  </bean>

</beans>